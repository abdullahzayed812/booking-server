version: "3.8"

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: doctor-appointment-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: doctor_appointment_db
      MYSQL_USER: doctor_app
      MYSQL_PASSWORD: doctorpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - doctor-appointment-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=200

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: doctor-appointment-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - doctor-appointment-network
    command: redis-server /usr/local/etc/redis/redis.conf

  # API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: doctor-appointment-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: doctor_appointment_db
      DB_USER: doctor_app
      DB_PASSWORD: doctorpass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_ACCESS_SECRET: dev-access-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - doctor-appointment-network
    depends_on:
      - mysql
      - redis
    command: npm run dev

  # Database Admin Interface (Adminer)
  adminer:
    image: adminer:latest
    container_name: doctor-appointment-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - doctor-appointment-network
    depends_on:
      - mysql

  # Redis Admin Interface (RedisInsight)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: doctor-appointment-redis-insight
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    networks:
      - doctor-appointment-network
    depends_on:
      - redis

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  redis_insight_data:
    driver: local

networks:
  doctor-appointment-network:
    driver: bridge
